# Makefile.in generated by automake 1.11.3 from Makefile.am.
# TreeZip/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/habitat
pkgincludedir = $(includedir)/habitat
pkglibdir = $(libdir)/habitat
pkglibexecdir = $(libexecdir)/habitat
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = treezip$(EXEEXT)
subdir = TreeZip
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_treezip_OBJECTS = hashfunc.$(OBJEXT) label-map.$(OBJEXT) \
	hash.$(OBJEXT) newick.$(OBJEXT) Random.$(OBJEXT) \
	SCNode.$(OBJEXT) SCTree.$(OBJEXT) buildtree.$(OBJEXT) \
	global.$(OBJEXT) parsing.$(OBJEXT) nexus_compress.$(OBJEXT) \
	nexus_decompress.$(OBJEXT) nexus_setop.$(OBJEXT) \
	compressfunc.$(OBJEXT) bmerge.$(OBJEXT) tmerge.$(OBJEXT) \
	treezip.$(OBJEXT)
treezip_OBJECTS = $(am_treezip_OBJECTS)
treezip_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(treezip_SOURCES)
DIST_SOURCES = $(treezip_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = habitat
PACKAGE_BUGREPORT = sjm@cse.tamu.edu
PACKAGE_NAME = habitat
PACKAGE_STRING = habitat 1.0
PACKAGE_TARNAME = habitat
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
abs_builddir = /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/TreeZip
abs_srcdir = /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/TreeZip
abs_top_builddir = /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0
abs_top_srcdir = /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sjm/Documents/Research/TAMU/TreeZip/treezip-3.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
comdir = ${top_srcdir}/Common
randir = ${comdir}/RandomLib
tclap = ${top_srcdir}/tclap
AM_CXXFLAGS = -Wall -O2 -funroll-loops -fexpensive-optimizations \
	-I${top_srcdir} -I${comdir}

#common sources

# common sources: Newick parser

# common sources: Mersenne Twister

# common sources: Command Line parser

# common sources: Tree Building

# TreeZip files
treezip_SOURCES = ${comdir}/hashfunc.hh ${comdir}/randomc.h \
	${comdir}/hashfunc.cc ${comdir}/label-map.hh \
	${comdir}/label-map.cc ${comdir}/hash.hh ${comdir}/hash.cc \
	${comdir}/newick.h ${comdir}/newick.c ${comdir}/Random.cpp \
	${randir}/Random.hpp ${randir}/RandomAlgorithm.hpp \
	${randir}/RandomCanonical.hpp ${randir}/RandomEngine.hpp \
	${randir}/RandomMixer.hpp ${randir}/RandomPower2.hpp \
	${randir}/RandomSeed.hpp ${randir}/RandomType.hpp \
	${tclap}/Arg.h ${tclap}/ArgException.h ${tclap}/CmdLine.h \
	${tclap}/CmdLineInterface.h ${tclap}/CmdLineOutput.h \
	${tclap}/Constraint.h ${tclap}/HelpVisitor.h \
	${tclap}/IgnoreRestVisitor.h ${tclap}/MultiSwitchArg.h \
	${tclap}/MultiArg.h ${tclap}/OptionalUnlabeledTracker.h \
	${tclap}/StdOutput.h ${tclap}/SwitchArg.h \
	${tclap}/UnlabeledMultiArg.h ${tclap}/UnlabeledValueArg.h \
	${tclap}/ValueArg.h ${tclap}/ValuesConstraint.h \
	${tclap}/VersionVisitor.h ${tclap}/Visitor.h \
	${tclap}/XorHandler.h ${comdir}/SCNode.h ${comdir}/SCNode.cc \
	${comdir}/SCTree.h ${comdir}/SCTree.cc ${comdir}/buildtree.h \
	${comdir}/buildtree.cc ${comdir}/global.h ${comdir}/global.cc \
	${comdir}/parsing.h ${comdir}/parsing.cc nexus_compress.hh \
	nexus_compress.cc nexus_decompress.hh nexus_decompress.cc \
	nexus_setop.hh nexus_setop.cc compressfunc.h compressfunc.cc \
	bmerge.h bmerge.cc tmerge.h tmerge.cc treezip.cc
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu TreeZip/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu TreeZip/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
treezip$(EXEEXT): $(treezip_OBJECTS) $(treezip_DEPENDENCIES) $(EXTRA_treezip_DEPENDENCIES) 
	@rm -f treezip$(EXEEXT)
	$(CXXLINK) $(treezip_OBJECTS) $(treezip_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Random.Po
include ./$(DEPDIR)/SCNode.Po
include ./$(DEPDIR)/SCTree.Po
include ./$(DEPDIR)/bmerge.Po
include ./$(DEPDIR)/buildtree.Po
include ./$(DEPDIR)/compressfunc.Po
include ./$(DEPDIR)/global.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/hashfunc.Po
include ./$(DEPDIR)/label-map.Po
include ./$(DEPDIR)/newick.Po
include ./$(DEPDIR)/nexus_compress.Po
include ./$(DEPDIR)/nexus_decompress.Po
include ./$(DEPDIR)/nexus_setop.Po
include ./$(DEPDIR)/parsing.Po
include ./$(DEPDIR)/tmerge.Po
include ./$(DEPDIR)/treezip.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

newick.o: ${comdir}/newick.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT newick.o -MD -MP -MF $(DEPDIR)/newick.Tpo -c -o newick.o `test -f '${comdir}/newick.c' || echo '$(srcdir)/'`${comdir}/newick.c
	$(am__mv) $(DEPDIR)/newick.Tpo $(DEPDIR)/newick.Po
#	source='${comdir}/newick.c' object='newick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o newick.o `test -f '${comdir}/newick.c' || echo '$(srcdir)/'`${comdir}/newick.c

newick.obj: ${comdir}/newick.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT newick.obj -MD -MP -MF $(DEPDIR)/newick.Tpo -c -o newick.obj `if test -f '${comdir}/newick.c'; then $(CYGPATH_W) '${comdir}/newick.c'; else $(CYGPATH_W) '$(srcdir)/${comdir}/newick.c'; fi`
	$(am__mv) $(DEPDIR)/newick.Tpo $(DEPDIR)/newick.Po
#	source='${comdir}/newick.c' object='newick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o newick.obj `if test -f '${comdir}/newick.c'; then $(CYGPATH_W) '${comdir}/newick.c'; else $(CYGPATH_W) '$(srcdir)/${comdir}/newick.c'; fi`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

hashfunc.o: ${comdir}/hashfunc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashfunc.o -MD -MP -MF $(DEPDIR)/hashfunc.Tpo -c -o hashfunc.o `test -f '${comdir}/hashfunc.cc' || echo '$(srcdir)/'`${comdir}/hashfunc.cc
	$(am__mv) $(DEPDIR)/hashfunc.Tpo $(DEPDIR)/hashfunc.Po
#	source='${comdir}/hashfunc.cc' object='hashfunc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashfunc.o `test -f '${comdir}/hashfunc.cc' || echo '$(srcdir)/'`${comdir}/hashfunc.cc

hashfunc.obj: ${comdir}/hashfunc.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashfunc.obj -MD -MP -MF $(DEPDIR)/hashfunc.Tpo -c -o hashfunc.obj `if test -f '${comdir}/hashfunc.cc'; then $(CYGPATH_W) '${comdir}/hashfunc.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/hashfunc.cc'; fi`
	$(am__mv) $(DEPDIR)/hashfunc.Tpo $(DEPDIR)/hashfunc.Po
#	source='${comdir}/hashfunc.cc' object='hashfunc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashfunc.obj `if test -f '${comdir}/hashfunc.cc'; then $(CYGPATH_W) '${comdir}/hashfunc.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/hashfunc.cc'; fi`

label-map.o: ${comdir}/label-map.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT label-map.o -MD -MP -MF $(DEPDIR)/label-map.Tpo -c -o label-map.o `test -f '${comdir}/label-map.cc' || echo '$(srcdir)/'`${comdir}/label-map.cc
	$(am__mv) $(DEPDIR)/label-map.Tpo $(DEPDIR)/label-map.Po
#	source='${comdir}/label-map.cc' object='label-map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o label-map.o `test -f '${comdir}/label-map.cc' || echo '$(srcdir)/'`${comdir}/label-map.cc

label-map.obj: ${comdir}/label-map.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT label-map.obj -MD -MP -MF $(DEPDIR)/label-map.Tpo -c -o label-map.obj `if test -f '${comdir}/label-map.cc'; then $(CYGPATH_W) '${comdir}/label-map.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/label-map.cc'; fi`
	$(am__mv) $(DEPDIR)/label-map.Tpo $(DEPDIR)/label-map.Po
#	source='${comdir}/label-map.cc' object='label-map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o label-map.obj `if test -f '${comdir}/label-map.cc'; then $(CYGPATH_W) '${comdir}/label-map.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/label-map.cc'; fi`

hash.o: ${comdir}/hash.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash.o -MD -MP -MF $(DEPDIR)/hash.Tpo -c -o hash.o `test -f '${comdir}/hash.cc' || echo '$(srcdir)/'`${comdir}/hash.cc
	$(am__mv) $(DEPDIR)/hash.Tpo $(DEPDIR)/hash.Po
#	source='${comdir}/hash.cc' object='hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash.o `test -f '${comdir}/hash.cc' || echo '$(srcdir)/'`${comdir}/hash.cc

hash.obj: ${comdir}/hash.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash.obj -MD -MP -MF $(DEPDIR)/hash.Tpo -c -o hash.obj `if test -f '${comdir}/hash.cc'; then $(CYGPATH_W) '${comdir}/hash.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/hash.cc'; fi`
	$(am__mv) $(DEPDIR)/hash.Tpo $(DEPDIR)/hash.Po
#	source='${comdir}/hash.cc' object='hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash.obj `if test -f '${comdir}/hash.cc'; then $(CYGPATH_W) '${comdir}/hash.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/hash.cc'; fi`

Random.o: ${comdir}/Random.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.o -MD -MP -MF $(DEPDIR)/Random.Tpo -c -o Random.o `test -f '${comdir}/Random.cpp' || echo '$(srcdir)/'`${comdir}/Random.cpp
	$(am__mv) $(DEPDIR)/Random.Tpo $(DEPDIR)/Random.Po
#	source='${comdir}/Random.cpp' object='Random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.o `test -f '${comdir}/Random.cpp' || echo '$(srcdir)/'`${comdir}/Random.cpp

Random.obj: ${comdir}/Random.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.obj -MD -MP -MF $(DEPDIR)/Random.Tpo -c -o Random.obj `if test -f '${comdir}/Random.cpp'; then $(CYGPATH_W) '${comdir}/Random.cpp'; else $(CYGPATH_W) '$(srcdir)/${comdir}/Random.cpp'; fi`
	$(am__mv) $(DEPDIR)/Random.Tpo $(DEPDIR)/Random.Po
#	source='${comdir}/Random.cpp' object='Random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.obj `if test -f '${comdir}/Random.cpp'; then $(CYGPATH_W) '${comdir}/Random.cpp'; else $(CYGPATH_W) '$(srcdir)/${comdir}/Random.cpp'; fi`

SCNode.o: ${comdir}/SCNode.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SCNode.o -MD -MP -MF $(DEPDIR)/SCNode.Tpo -c -o SCNode.o `test -f '${comdir}/SCNode.cc' || echo '$(srcdir)/'`${comdir}/SCNode.cc
	$(am__mv) $(DEPDIR)/SCNode.Tpo $(DEPDIR)/SCNode.Po
#	source='${comdir}/SCNode.cc' object='SCNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SCNode.o `test -f '${comdir}/SCNode.cc' || echo '$(srcdir)/'`${comdir}/SCNode.cc

SCNode.obj: ${comdir}/SCNode.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SCNode.obj -MD -MP -MF $(DEPDIR)/SCNode.Tpo -c -o SCNode.obj `if test -f '${comdir}/SCNode.cc'; then $(CYGPATH_W) '${comdir}/SCNode.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/SCNode.cc'; fi`
	$(am__mv) $(DEPDIR)/SCNode.Tpo $(DEPDIR)/SCNode.Po
#	source='${comdir}/SCNode.cc' object='SCNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SCNode.obj `if test -f '${comdir}/SCNode.cc'; then $(CYGPATH_W) '${comdir}/SCNode.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/SCNode.cc'; fi`

SCTree.o: ${comdir}/SCTree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SCTree.o -MD -MP -MF $(DEPDIR)/SCTree.Tpo -c -o SCTree.o `test -f '${comdir}/SCTree.cc' || echo '$(srcdir)/'`${comdir}/SCTree.cc
	$(am__mv) $(DEPDIR)/SCTree.Tpo $(DEPDIR)/SCTree.Po
#	source='${comdir}/SCTree.cc' object='SCTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SCTree.o `test -f '${comdir}/SCTree.cc' || echo '$(srcdir)/'`${comdir}/SCTree.cc

SCTree.obj: ${comdir}/SCTree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SCTree.obj -MD -MP -MF $(DEPDIR)/SCTree.Tpo -c -o SCTree.obj `if test -f '${comdir}/SCTree.cc'; then $(CYGPATH_W) '${comdir}/SCTree.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/SCTree.cc'; fi`
	$(am__mv) $(DEPDIR)/SCTree.Tpo $(DEPDIR)/SCTree.Po
#	source='${comdir}/SCTree.cc' object='SCTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SCTree.obj `if test -f '${comdir}/SCTree.cc'; then $(CYGPATH_W) '${comdir}/SCTree.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/SCTree.cc'; fi`

buildtree.o: ${comdir}/buildtree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buildtree.o -MD -MP -MF $(DEPDIR)/buildtree.Tpo -c -o buildtree.o `test -f '${comdir}/buildtree.cc' || echo '$(srcdir)/'`${comdir}/buildtree.cc
	$(am__mv) $(DEPDIR)/buildtree.Tpo $(DEPDIR)/buildtree.Po
#	source='${comdir}/buildtree.cc' object='buildtree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buildtree.o `test -f '${comdir}/buildtree.cc' || echo '$(srcdir)/'`${comdir}/buildtree.cc

buildtree.obj: ${comdir}/buildtree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buildtree.obj -MD -MP -MF $(DEPDIR)/buildtree.Tpo -c -o buildtree.obj `if test -f '${comdir}/buildtree.cc'; then $(CYGPATH_W) '${comdir}/buildtree.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/buildtree.cc'; fi`
	$(am__mv) $(DEPDIR)/buildtree.Tpo $(DEPDIR)/buildtree.Po
#	source='${comdir}/buildtree.cc' object='buildtree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buildtree.obj `if test -f '${comdir}/buildtree.cc'; then $(CYGPATH_W) '${comdir}/buildtree.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/buildtree.cc'; fi`

global.o: ${comdir}/global.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT global.o -MD -MP -MF $(DEPDIR)/global.Tpo -c -o global.o `test -f '${comdir}/global.cc' || echo '$(srcdir)/'`${comdir}/global.cc
	$(am__mv) $(DEPDIR)/global.Tpo $(DEPDIR)/global.Po
#	source='${comdir}/global.cc' object='global.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o global.o `test -f '${comdir}/global.cc' || echo '$(srcdir)/'`${comdir}/global.cc

global.obj: ${comdir}/global.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT global.obj -MD -MP -MF $(DEPDIR)/global.Tpo -c -o global.obj `if test -f '${comdir}/global.cc'; then $(CYGPATH_W) '${comdir}/global.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/global.cc'; fi`
	$(am__mv) $(DEPDIR)/global.Tpo $(DEPDIR)/global.Po
#	source='${comdir}/global.cc' object='global.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o global.obj `if test -f '${comdir}/global.cc'; then $(CYGPATH_W) '${comdir}/global.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/global.cc'; fi`

parsing.o: ${comdir}/parsing.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parsing.o -MD -MP -MF $(DEPDIR)/parsing.Tpo -c -o parsing.o `test -f '${comdir}/parsing.cc' || echo '$(srcdir)/'`${comdir}/parsing.cc
	$(am__mv) $(DEPDIR)/parsing.Tpo $(DEPDIR)/parsing.Po
#	source='${comdir}/parsing.cc' object='parsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parsing.o `test -f '${comdir}/parsing.cc' || echo '$(srcdir)/'`${comdir}/parsing.cc

parsing.obj: ${comdir}/parsing.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parsing.obj -MD -MP -MF $(DEPDIR)/parsing.Tpo -c -o parsing.obj `if test -f '${comdir}/parsing.cc'; then $(CYGPATH_W) '${comdir}/parsing.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/parsing.cc'; fi`
	$(am__mv) $(DEPDIR)/parsing.Tpo $(DEPDIR)/parsing.Po
#	source='${comdir}/parsing.cc' object='parsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parsing.obj `if test -f '${comdir}/parsing.cc'; then $(CYGPATH_W) '${comdir}/parsing.cc'; else $(CYGPATH_W) '$(srcdir)/${comdir}/parsing.cc'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
